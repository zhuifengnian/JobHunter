<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.stone.jobhunter.mapper.DeliverJobMapper" >
  <resultMap id="BaseResultMap" type="com.stone.jobhunter.pojo.DeliverJob" >
    <constructor >
      <idArg column="id" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="enterprise_id" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="state" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="create_time" jdbcType="TIMESTAMP" javaType="java.util.Date" />
      <arg column="update_time" jdbcType="TIMESTAMP" javaType="java.util.Date" />
      <arg column="user_id" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="resume_id" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="sequence" jdbcType="VARCHAR" javaType="java.lang.String" />
    </constructor>
  </resultMap>
  <sql id="Base_Column_List" >
    id, enterprise_id, state, create_time, update_time, user_id, resume_id, sequence
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from deliver_job
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from deliver_job
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.stone.jobhunter.pojo.DeliverJob" useGeneratedKeys="true" keyProperty="id">
    insert into deliver_job (id, enterprise_id, state, 
      create_time, update_time, user_id, 
      resume_id, sequence)
    values (#{id,jdbcType=INTEGER}, #{enterpriseId,jdbcType=INTEGER}, #{state,jdbcType=INTEGER}, 
      #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}, #{userId,jdbcType=INTEGER}, 
      #{resumeId,jdbcType=INTEGER}, #{sequence,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.stone.jobhunter.pojo.DeliverJob" useGeneratedKeys="true" keyProperty="id">
    insert into deliver_job
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="enterpriseId != null" >
        enterprise_id,
      </if>
      <if test="state != null" >
        state,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="updateTime != null" >
        update_time,
      </if>
      <if test="userId != null" >
        user_id,
      </if>
      <if test="resumeId != null" >
        resume_id,
      </if>
      <if test="sequence != null" >
        sequence,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="enterpriseId != null" >
        #{enterpriseId,jdbcType=INTEGER},
      </if>
      <if test="state != null" >
        #{state,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="userId != null" >
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="resumeId != null" >
        #{resumeId,jdbcType=INTEGER},
      </if>
      <if test="sequence != null" >
        #{sequence,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.stone.jobhunter.pojo.DeliverJob" >
    update deliver_job
    <set >
      <if test="enterpriseId != null" >
        enterprise_id = #{enterpriseId,jdbcType=INTEGER},
      </if>
      <if test="state != null" >
        state = #{state,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="userId != null" >
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="resumeId != null" >
        resume_id = #{resumeId,jdbcType=INTEGER},
      </if>
      <if test="sequence != null" >
        sequence = #{sequence,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.stone.jobhunter.pojo.DeliverJob" >
    update deliver_job
    set enterprise_id = #{enterpriseId,jdbcType=INTEGER},
      state = #{state,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      user_id = #{userId,jdbcType=INTEGER},
      resume_id = #{resumeId,jdbcType=INTEGER},
      sequence = #{sequence,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>